// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	"github.com/iooojik/go-auth-gate/apple"
	"github.com/stretchr/testify/mock"
)

// ClientSecretGenerator is an autogenerated mock type for the ClientSecretGenerator type
type ClientSecretGenerator struct {
	mock.Mock
}

type ClientSecretGenerator_Expecter struct {
	mock *mock.Mock
}

func (_m *ClientSecretGenerator) EXPECT() *ClientSecretGenerator_Expecter {
	return &ClientSecretGenerator_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: cfg
func (_m *ClientSecretGenerator) Execute(cfg apple.TokenConfig) (string, error) {
	ret := _m.Called(cfg)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(apple.TokenConfig) (string, error)); ok {
		return rf(cfg)
	}
	if rf, ok := ret.Get(0).(func(apple.TokenConfig) string); ok {
		r0 = rf(cfg)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(apple.TokenConfig) error); ok {
		r1 = rf(cfg)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ClientSecretGenerator_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type ClientSecretGenerator_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - cfg apple.TokenConfig
func (_e *ClientSecretGenerator_Expecter) Execute(cfg interface{}) *ClientSecretGenerator_Execute_Call {
	return &ClientSecretGenerator_Execute_Call{Call: _e.mock.On("Execute", cfg)}
}

func (_c *ClientSecretGenerator_Execute_Call) Run(run func(cfg apple.TokenConfig)) *ClientSecretGenerator_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(apple.TokenConfig))
	})
	return _c
}

func (_c *ClientSecretGenerator_Execute_Call) Return(
	_a0 string,
	_a1 error,
) *ClientSecretGenerator_Execute_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *ClientSecretGenerator_Execute_Call) RunAndReturn(run func(apple.TokenConfig) (string, error)) *ClientSecretGenerator_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewClientSecretGenerator creates a new instance of ClientSecretGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewClientSecretGenerator(
	t interface {
		mock.TestingT
		Cleanup(func())
	},
) *ClientSecretGenerator {
	mock := &ClientSecretGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
